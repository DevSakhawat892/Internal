// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TUSO.Infrastructure.SqlServer;

#nullable disable

namespace TUSO.Infrastructure.SqlServer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220922122214_Create-TierLevel")]
    partial class CreateTierLevel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TUSO.Domain.Entities.ApplicationPermission", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<bool>("CreatePermission")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("DeletePermission")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPermission")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<bool>("ReadPermission")
                        .HasColumnType("bit");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("RoleID");

                    b.ToTable("ApplicationPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Assignment", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("IncidentID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAccountID")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("IncidentID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Country", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Department", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Designation", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepertmentHead")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ExclationRule", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("RouteGroup")
                        .HasColumnType("int");

                    b.Property<int>("RouteTime")
                        .HasColumnType("int");

                    b.Property<long>("RouteTo")
                        .HasColumnType("bigint");

                    b.Property<int>("SLAID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("SLAID");

                    b.ToTable("ExclationRules");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Facility", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DistrictID")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("DistrictID");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.GeographicPermission", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DistrictID")
                        .HasColumnType("int");

                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.Property<long>("UserAccountID")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("GeographicPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Holiday", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OID");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.HolidayList", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("DayName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Holiday")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("HolidayID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("HolidayID");

                    b.ToTable("HolidayLists");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DateReported")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IncidentStatus")
                        .HasColumnType("int");

                    b.Property<int>("IncidentTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<long>("UserAccountID")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentStatus", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("IncidentID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.HasKey("OID");

                    b.HasIndex("IncidentID");

                    b.ToTable("IncidentStatuses");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentType", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IncidentTypeName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.ToTable("IncidentTypes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Module", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("OID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Notification", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NotificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NotificationOID")
                        .HasColumnType("bigint");

                    b.Property<string>("NotificationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OID");

                    b.HasIndex("NotificationOID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.NotificationPermission", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("NotificationID")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviewID")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("NotificationID");

                    b.ToTable("NotificationPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Priority", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PriorityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SLAID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("SLAID");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ProfilePicture", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("ProfilePictures")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("OID");

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("OID");

                    b.HasIndex("CountryID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RecoveryRequest", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("ChangedPasswordBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("OID");

                    b.ToTable("RecoveryRequests");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Role", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("OID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RouteType", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RouteTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OID");

                    b.ToTable("RouteTypes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.SLA", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HolidayID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumTime")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("WithHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("WithWorkingHour")
                        .HasColumnType("bit");

                    b.HasKey("OID");

                    b.HasIndex("HolidayID");

                    b.ToTable("SLAs");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TicketRouting", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AssignTo")
                        .HasColumnType("bigint");

                    b.Property<long?>("CallCenterID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CallCenterRefferDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DepartmentRefferDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("IncidentID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("RouteTypeID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("IncidentID");

                    b.HasIndex("RouteTypeID");

                    b.ToTable("TicketRoutings");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TierLevel", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("IncidentTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("TierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("IncidentTypeID");

                    b.ToTable("TierLevels");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.Property<long>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OID"), 1L, 1);

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("DesignationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<bool>("IsAccountActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(61)
                        .HasColumnType("nvarchar(61)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("OID");

                    b.HasIndex("DesignationID");

                    b.HasIndex("RoleID");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ApplicationPermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Module", "Modules")
                        .WithMany("ApplicationPermissions")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.Role", "Roles")
                        .WithMany("ApplicationPermissions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modules");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incidents")
                        .WithMany("Assignments")
                        .HasForeignKey("IncidentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Designation", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Department", "Department")
                        .WithMany("Designations")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Province", "Provinces")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.ExclationRule", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.SLA", "SLA")
                        .WithMany("ExclationRules")
                        .HasForeignKey("SLAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SLA");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Facility", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.District", "Districts")
                        .WithMany("Facilities")
                        .HasForeignKey("DistrictID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.GeographicPermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccount")
                        .WithMany("GeographicPermissions")
                        .HasForeignKey("UserAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.HolidayList", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Holiday", "Holidays")
                        .WithMany("HolidayLists")
                        .HasForeignKey("HolidayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holidays");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.UserAccount", "UserAccounts")
                        .WithMany()
                        .HasForeignKey("UserAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentStatus", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incidents")
                        .WithMany("IncidentStatuses")
                        .HasForeignKey("IncidentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Notification", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Notification", null)
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationOID");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.NotificationPermission", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Notification", "Notifications")
                        .WithMany()
                        .HasForeignKey("NotificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Priority", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.SLA", "SLA")
                        .WithMany("Priorities")
                        .HasForeignKey("SLAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SLA");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Country", "Countries")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.SLA", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Holiday", "Holidays")
                        .WithMany("SLAs")
                        .HasForeignKey("HolidayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holidays");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TicketRouting", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Incident", "Incidents")
                        .WithMany("TicketRoutings")
                        .HasForeignKey("IncidentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.RouteType", "RouteTypes")
                        .WithMany("TicketRoutings")
                        .HasForeignKey("RouteTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidents");

                    b.Navigation("RouteTypes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.TierLevel", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Department", "Departments")
                        .WithMany("TierLevels")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.IncidentType", "IncidentTypes")
                        .WithMany("TierLevels")
                        .HasForeignKey("IncidentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("IncidentTypes");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.HasOne("TUSO.Domain.Entities.Designation", "Designations")
                        .WithMany("UserAccounts")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUSO.Domain.Entities.Role", "Roles")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designations");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Department", b =>
                {
                    b.Navigation("Designations");

                    b.Navigation("TierLevels");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Designation", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.District", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Holiday", b =>
                {
                    b.Navigation("HolidayLists");

                    b.Navigation("SLAs");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Incident", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("IncidentStatuses");

                    b.Navigation("TicketRoutings");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.IncidentType", b =>
                {
                    b.Navigation("TierLevels");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Module", b =>
                {
                    b.Navigation("ApplicationPermissions");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.Role", b =>
                {
                    b.Navigation("ApplicationPermissions");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.RouteType", b =>
                {
                    b.Navigation("TicketRoutings");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.SLA", b =>
                {
                    b.Navigation("ExclationRules");

                    b.Navigation("Priorities");
                });

            modelBuilder.Entity("TUSO.Domain.Entities.UserAccount", b =>
                {
                    b.Navigation("GeographicPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
